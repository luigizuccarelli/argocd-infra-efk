# RBAC authn and authz
apiVersion: v1
kind: ServiceAccount
metadata:
  name: lmz-test-es
  namespace: test
  labels:
    k8s-app: lmz-test-es
    addonmanager.kubernetes.io/mode: Reconcile
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: lmz-test-es
  labels:
    k8s-app: lmz-test-es
    addonmanager.kubernetes.io/mode: Reconcile
rules:
  - apiGroups:
      - ""
    resources:
      - "services"
      - "namespaces"
      - "endpoints"
    verbs:
      - "get"
      - "list"
      - "watch"
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: test
  name: lmz-test-es
  labels:
    k8s-app: lmz-test-es
    addonmanager.kubernetes.io/mode: Reconcile
subjects:
  - kind: ServiceAccount
    name: lmz-test-es
    namespace: test
    apiGroup: ""
roleRef:
  kind: ClusterRole
  name: lmz-test-es
  apiGroup: ""
---
# Elasticsearch deployment itself
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: lmz-test-es-cluster
  namespace: test
  labels:
    k8s-app: lmz-test-es
    version: v7.11.2
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  serviceName: lmz-test-es
  replicas: 3
  selector:
    matchLabels:
      k8s-app: lmz-test-es
      version: v7.11.2
  template:
    metadata:
      labels:
        k8s-app: lmz-test-es
        version: v7.11.2
    spec:
      serviceAccountName: lmz-test-es
      containers:
        - image: docker.io/elasticsearch:7.11.2
          name: lmz-test-es
          imagePullPolicy: Always
          securityContext:
            privileged: true
          resources: {}
            # need more cpu upon initialization, therefore burstable class
            #limits:
            #  cpu: 1000m
            #  memory: 3Gi
            #requests:
            #  cpu: 100m
            #  memory: 3Gi
          ports:
            - containerPort: 9200
              name: db
              protocol: TCP
            - containerPort: 9300
              name: transport
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 30
            timeoutSeconds: 10
            httpGet:
              path: /_cluster/health?local=true
              port: 9200
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
            httpGet:
              path: /_cluster/health?wait_for_status=yellow&timeout=50s
              port: 9200
          volumeMounts:
            - name: lmz-test-es
              mountPath: /usr/share/elasticsearch/data
          env:
            - name: log-level
              value: DEBUG
            - name: cluster.name
              value: kubernetes
            - name: "NAMESPACE"
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            #- name: "MINIMUM_MASTER_NODES"
            #  value: "1"
            - name: node.master
              value: "true"
            - name: node.name
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: discovery.seed_hosts
              value: "lmz-test-es-cluster-0.lmz-test-es.test.svc.cluster.local"
            - name: cluster.initial_master_nodes
              value: "lmz-test-es-cluster-0"
            - name: ES_JAVA_OPTS
              value: "-Xms512m -Xmx512m"
      # Elasticsearch requires vm.max_map_count to be at least 262144.
      # If your OS already sets up this number to a higher value, feel free
      # to remove this init container.
      initContainers:
        - name: increase-vm-heap
          image: alpine:3.6
          command: ["/sbin/sysctl", "-w", "vm.max_map_count=262144"]
          securityContext:
            privileged: true
        - name: increase-fd-ulimit
          image: alpine:3.6
          command: ["sh", "-c", "ulimit -n 65536"]
          securityContext:
            privileged: true
  volumeClaimTemplates:
  - metadata:
      name: lmz-test-es
      labels:
        k8s-app: lmz-test-es
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: nfs-storage
      resources:
        requests:
          storage: 5Gi
